// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGCUCMAPI.Data;

#nullable disable

namespace SGCUCMAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240321095932_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SGCUCMAPI.Models.Convenio", b =>
                {
                    b.Property<int>("IdConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConvenio"));

                    b.Property<int>("AnioFirma")
                        .HasColumnType("int")
                        .HasColumnName("ANO_FIRMA");

                    b.Property<string>("CondicionRenovacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONDICION_RENOVACION");

                    b.Property<int>("Cupos")
                        .HasColumnType("int")
                        .HasColumnName("CUPOS");

                    b.Property<string>("Documentos")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DOCUMENTOS");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESTATUS");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_INICIO");

                    b.Property<DateTime>("FechaTermino")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_TERMINO");

                    b.Property<int>("IdUnidadGestora")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDAD_GESTORA");

                    b.Property<string>("Movilidad")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MOVILIDAD");

                    b.Property<string>("NombreConvenio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NOMBRE_CONV");

                    b.Property<string>("TipoConvenio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TIPO_CONV");

                    b.Property<string>("TipoFirma")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TIPO_FIRMA");

                    b.Property<string>("Vigencia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("VIGENCIA");

                    b.HasKey("IdConvenio")
                        .HasName("PK_CONVENIO");

                    b.HasIndex("IdUnidadGestora");

                    b.ToTable("CONVENIO", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Coordinador", b =>
                {
                    b.Property<int>("IdCoordinador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_COORDINADOR");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCoordinador"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CORREO");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int")
                        .HasColumnName("ID_INSTITUCION");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TIPO");

                    b.HasKey("IdCoordinador")
                        .HasName("PK_COORDINADOR");

                    b.HasIndex("IdInstitucion");

                    b.ToTable("COORDINADOR", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Historial.ConvenioHistorial", b =>
                {
                    b.Property<int>("IdCambioConvenio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CAMBIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCambioConvenio"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACCION");

                    b.Property<int>("AnioFirma")
                        .HasColumnType("int")
                        .HasColumnName("ANO_FIRMA");

                    b.Property<string>("CondicionRenovacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CONDICION_RENOVACION");

                    b.Property<int>("Cupos")
                        .HasColumnType("int")
                        .HasColumnName("CUPOS");

                    b.Property<string>("Documentos")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DOCUMENTOS");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ESTATUS");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CAMBIO");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_INICIO");

                    b.Property<DateTime>("FechaTermino")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_TERMINO");

                    b.Property<int>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<int>("IdUnidadGestora")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDAD_GESTORA");

                    b.Property<string>("Movilidad")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("MOVILIDAD");

                    b.Property<string>("NombreConvenio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NOMBRE_CONV");

                    b.Property<string>("TipoConvenio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TIPO_CONV");

                    b.Property<string>("TipoFirma")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TIPO_FIRMA");

                    b.Property<string>("UsuarioCambio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USUARIO_CAMBIO");

                    b.Property<string>("Vigencia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("VIGENCIA");

                    b.HasKey("IdCambioConvenio")
                        .HasName("PK_CONVENIO_HISTORIAL");

                    b.ToTable("CONVENIO_HISTORIAL", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Historial.CoordinadorHistorial", b =>
                {
                    b.Property<int>("IdCambioCoordinador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CAMBIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCambioCoordinador"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACCION");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CORREO");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CAMBIO");

                    b.Property<int>("IdCoordinador")
                        .HasColumnType("int")
                        .HasColumnName("ID_COORDINADOR");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int")
                        .HasColumnName("ID_INSTITUCION");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TIPO");

                    b.Property<string>("UsuarioCambio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USUARIO_CAMBIO");

                    b.HasKey("IdCambioCoordinador")
                        .HasName("PK_COORDINADOR_HISTORIAL");

                    b.ToTable("COORDINADOR_HISTORIAL", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Historial.InstitucionHistorial", b =>
                {
                    b.Property<int>("IdCambioInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CAMBIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCambioInstitucion"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACCION");

                    b.Property<string>("Alcance")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ALCANCE");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CAMBIO");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int")
                        .HasColumnName("ID_INSTITUCION");

                    b.Property<string>("NombreInstitucion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOMBRE_INST");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PAIS");

                    b.Property<string>("TipoInstitucion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TIPO_INSTITUCION");

                    b.Property<string>("UsuarioCambio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USUARIO_CAMBIO");

                    b.HasKey("IdCambioInstitucion")
                        .HasName("PK_INSTITUCION_HISTORIAL");

                    b.ToTable("INSTITUCION_HISTORIAL", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Historial.UnidadGestoraHistorial", b =>
                {
                    b.Property<int>("IdCambioUnidadGestora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CAMBIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCambioUnidadGestora"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACCION");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CAMBIO");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int")
                        .HasColumnName("ID_INSTITUCION");

                    b.Property<int>("IdUnidadGestora")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDAD_GESTORA");

                    b.Property<string>("NombreUnidad")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOMBRE_UNIDAD");

                    b.Property<string>("UsuarioCambio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USUARIO_CAMBIO");

                    b.HasKey("IdCambioUnidadGestora")
                        .HasName("PK_UNIDAD_HISTORIAL");

                    b.ToTable("UNIDAD_GESTORA_HISTORIAL", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Historial.UsuarioHistorial", b =>
                {
                    b.Property<int>("IdCambioUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CAMBIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCambioUsuario"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACCION");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("APELLIDO");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CONTRASENA");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("EMAIL");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CAMBIO");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Privilegios")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("PRIVILEGIOS");

                    b.Property<string>("UsuarioCambio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("USUARIO_CAMBIO");

                    b.Property<string>("Vigencia")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("VIGENCIA");

                    b.HasKey("IdCambioUsuario")
                        .HasName("PK_USUARIO_HISTORIAL");

                    b.ToTable("USUARIO_HISTORIAL", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Institucion", b =>
                {
                    b.Property<int>("IdInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_INSTITUCION");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInstitucion"));

                    b.Property<string>("Alcance")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ALCANCE");

                    b.Property<string>("NombreInstitucion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOMBRE_INST");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("PAIS");

                    b.Property<string>("TipoInstitucion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("TIPO_INSTITUCION");

                    b.HasKey("IdInstitucion")
                        .HasName("PK_INSTITUCION");

                    b.ToTable("INSTITUCION", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.RelacionConvenioCoordinador", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_RELACION_CONV_COORD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<int>("IdConvenio")
                        .HasColumnType("int")
                        .HasColumnName("ID_CONVENIO");

                    b.Property<int>("IdCoordinador")
                        .HasColumnType("int")
                        .HasColumnName("ID_COORDINADOR");

                    b.HasKey("IdRelacion")
                        .HasName("PK_RELACION");

                    b.HasIndex("IdConvenio");

                    b.HasIndex("IdCoordinador");

                    b.ToTable("RELACION_CONVENIO_COORDINADOR", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.UnidadGestora", b =>
                {
                    b.Property<int>("IdUnidadGestora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDAD_GESTORA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadGestora"));

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int")
                        .HasColumnName("ID_INSTITUCION");

                    b.Property<string>("NombreUnidad")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOMBRE_UNIDAD");

                    b.HasKey("IdUnidadGestora")
                        .HasName("PK_UNIDADGESTORA");

                    b.HasIndex("IdInstitucion");

                    b.ToTable("UNIDAD_GESTORA", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("APELLIDO");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("CONTRASENA");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Privilegios")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("PRIVILEGIOS");

                    b.Property<string>("Vigencia")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("VIGENCIA");

                    b.HasKey("IdUsuario")
                        .HasName("PK_USUARIO");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Convenio", b =>
                {
                    b.HasOne("SGCUCMAPI.Models.UnidadGestora", null)
                        .WithMany()
                        .HasForeignKey("IdUnidadGestora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CONVENIO_UNIDADGESTORA");
                });

            modelBuilder.Entity("SGCUCMAPI.Models.Coordinador", b =>
                {
                    b.HasOne("SGCUCMAPI.Models.Institucion", null)
                        .WithMany()
                        .HasForeignKey("IdInstitucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_COORDINADOR_INSTITUCION");
                });

            modelBuilder.Entity("SGCUCMAPI.Models.RelacionConvenioCoordinador", b =>
                {
                    b.HasOne("SGCUCMAPI.Models.Convenio", null)
                        .WithMany()
                        .HasForeignKey("IdConvenio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_RELACION_CONVENIO");

                    b.HasOne("SGCUCMAPI.Models.Coordinador", null)
                        .WithMany()
                        .HasForeignKey("IdCoordinador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_RELACION_COORDINADOR");
                });

            modelBuilder.Entity("SGCUCMAPI.Models.UnidadGestora", b =>
                {
                    b.HasOne("SGCUCMAPI.Models.Institucion", null)
                        .WithMany()
                        .HasForeignKey("IdInstitucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UNIDAD_INSTITUCION");
                });
#pragma warning restore 612, 618
        }
    }
}
